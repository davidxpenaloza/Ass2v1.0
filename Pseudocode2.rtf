{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18260\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
### Pseudocode for Student Class\
\
CLASS Student\
    ATTRIBUTES:\
        String lastName\
        String firstName\
        String studentID\
        Float A1\
        Float A2\
        Float A3\
\
    METHOD getTotalMarks() RETURNS Float\
        RETURN (A1 + A2 + A3)/3\
\
    CONSTRUCTOR Student(lastName, firstName, studentID, A1, A2, A3)\
        ASSIGN lastName to this.lastName\
        ASSIGN firstName to this.firstName\
        ASSIGN studentID to this.studentID\
        ASSIGN A1 to this.A1\
        ASSIGN A2 to this.A2\
        ASSIGN A3 to this.A3\
\
    METHOD toString() RETURNS String\
        DEFINE totalMarks as CALL getTotalMarks()\
        RETURN formatted string: lastName, firstName, studentID, A1, A2, A3, totalMarks with two decimal places\
\
CLASS StudentOrder\
    METHOD main(args)\
        // Declare Scanner for user input (not used)\
        DECLARE ArrayList students\
\
        TRY\
            DECLARE File f WITH NAME "prog5001_students_grade_2022.txt"\
            DECLARE Scanner sc TO READ FROM f\
            \
            WHILE sc.hasNextLine()\
                DECLARE String line AS sc.nextLine()\
                DECLARE String[] parts AS line.split(",")\
                \
                // Assign values from the split line to variables\
                DECLARE String lastName AS parts[0]\
                DECLARE String firstName AS parts[1]\
                DECLARE String studentID AS parts[2]\
                \
                TRY\
                    DECLARE Float A1 AS Float.parseFloat(parts[3])\
                    DECLARE Float A2 AS Float.parseFloat(parts[4])\
                    DECLARE Float A3 AS Float.parseFloat(parts[5])\
                    \
                    // Create a student object\
                    DECLARE Student p AS new Student(lastName, firstName, studentID, A1, A2, A3)\
                    ADD p TO students\
                    \
                    // Print for debugging\
                    PRINT "Added student: " + p\
                CATCH NumberFormatException e\
                    PRINT "Error parsing grades for student: " + lastName + ", " + firstName + ", " + studentID\
                END TRY\
            END WHILE\
        CATCH FileNotFoundException e\
            PRINT "File not found: " + e.getMessage()\
        END TRY\
\
        // Sort students by total marks in descending order\
        CALL students.sort using (s1, s2) -> Float.compare(s2.getTotalMarks(), s1.getTotalMarks())\
\
        PRINT "\\nTop 5 Students with Highest Marks: "\
        FOR i FROM 0 TO MIN(students.size(), 5) - 1 DO\
            PRINT students.get(i).toString()\
        END FOR\
\
        PRINT "\\nTop 5 Students with Lowest Marks: "\
        FOR i FROM students.size() - 1 DOWNTO MAX(0, students.size() - 5)\
            PRINT students.get(i).toString()\
        END FOR\
\
\
\
}